<?xml version="1.0" encoding="UTF-8"?>
<project name="ant-intellij-tasks" default="build"
         xmlns:rsel="antlib:org.apache.tools.ant.types.resources.selectors">

    <!-- Import ant-intellij-tasks -->
    <taskdef resource="com/tomergabel/build/intellij/ant/antlib.xml"
             classpath="lib/ant-intellij-tasks.jar"/>
    <!-- Import ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"
             classpath="lib/ant-contrib.jar"/>

    <!-- Globals -->
    <!-- TODO: replace with lookup -->
    <property name="module-file" value="ant-intellij-tasks.iml"/>
    <property name="project-file" value="ant-intellij-tasks.ipr"/>

    <!-- Forward declarations -->
    <property name="idea.moduledeps" value=""/>
    <property name="idea.output" value=""/>
    <property name="idea.sources" value=""/>

    <!-- Targets -->

    <target name="build-deps" depends="resolve-deps">
        <for list="${idea.moduledeps}" param="dependency">
            <sequential>
                <ant antfile="${dependency}"/>
            </sequential>
        </for>
    </target>

    <target name="clean" depends="resolve-output">
        <delete dir="${idea.output}" includes="**"/>
    </target>

    <target name="resolve-core"
            depends="resolve-output, resolve-classpath, resolve-sources-core, resolve-deps, resolve-resources-core"/>
    <target name="resolve-all" depends="resolve-core, resolve-sources-test, resolve-resources-test"/>

    <target name="resolve-output">
        <resolveOutputDirectory property="idea.output" projectfile="${project-file}" modulefile="${module-file}"/>
    </target>
    <target name="resolve-sources-core">
        <resolveSourceDirectories pathid="idea.sources.core" filter="source" projectfile="${project-file}"
                                  modulefile="${module-file}"/>
    </target>
    <target name="resolve-sources-test">
        <resolveSourceDirectories pathid="idea.sources.test" filter="test" projectfile="${project-file}"
                                  modulefile="${module-file}"/>
    </target>
    <target name="resolve-classpath">
        <resolveModuleClasspath pathid="idea.classpath" projectfile="${project-file}" modulefile="${module-file}"/>
    </target>
    <target name="resolve-deps">
        <resolveModuleDependencies mode="descriptors" property="idea.moduledeps" projectfile="${project-file}"
                                   srcfile="${module-file}"/>
    </target>
    <target name="resolve-resources-core">
        <resolveModuleResources pathid="idea.resources.core" filter="source" projectfile="${project-file}"
                                modulefile="${module-file}"/>
    </target>
    <target name="resolve-resources-test">
        <resolveModuleResources pathid="idea.resources.core" filter="test" projectfile="${project-file}"
                                modulefile="${module-file}"/>
    </target>
    <target name="resolve-resources-all">
        <resolveModuleResources pathid="idea.resources.core" filter="both" projectfile="${project-file}"
                                modulefile="${module-file}"/>
    </target>

    <target name="build" depends="build-core"/>

    <target name="build-core" depends="resolve-core, build-deps, copy-resources-core">
        <!-- Build module -->
        <javac destdir="${idea.output}" classpathref="idea.classpath" debug="true" encoding="utf-8">
            <src refid="idea.sources.core"/>
        </javac>
    </target>
    <target name="build-all" depends="resolve-all, build-deps, copy-resources-all">
        <!-- Build module -->
        <javac destdir="${idea.output}" classpathref="idea.classpath" debug="true" encoding="utf-8">
            <src refid="idea.sources.core"/>
            <src refid="idea.sources.test"/>
        </javac>
    </target>

    <target name="copy-resources-core" depends="resolve-resources-core">
        <copy todir="${idea.output}" includeemptydirs="false">
            <path refid="idea.resources.core"/>
        </copy>
    </target>
    <target name="copy-resources-test" depends="resolve-resources-test">
        <copy todir="${idea.output}" includeemptydirs="false">
            <path refid="idea.resources.core"/>
        </copy>
    </target>
    <target name="copy-resources-all" depends="resolve-resources-all">
        <copy todir="${idea.output}" includeemptydirs="false">
            <path refid="idea.resources.core"/>
        </copy>
    </target>

    <target name="test" depends="build-all">
        <pathconvert refid="idea.sources.test" property="directories"/>
        <for list="${directories}" param="directory">
            <sequential>
                <echo message="@{directory}"/>
                <junit fork="true">
                    <formatter type="plain" usefile="false"/>
                    <assertions>
                        <enable/>
                    </assertions>
                    <classpath>
                        <path refid="idea.classpath"/>
                        <dirset dir="${idea.output}"/>
                    </classpath>
                    <batchtest>
                        <fileset dir="@{directory}">
                            <include name="**/Test*.java"/>
                            <include name="**/*Test.java"/>
                            <include name="**/*Tests.java"/>
                        </fileset>
                    </batchtest>
                </junit>
            </sequential>
        </for>
    </target>

</project>